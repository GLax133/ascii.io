console={log:function(e){postMessage({message:"log",text:e})}};var ArchUtils=function(){"use strict";function e(e,t){var n=e.length;if(t>=n)throw RangeError("Out of bound");if(t<0)throw RangeError("Out of bound");var r=e;e=e.join(""),r.sort();var i={};for(var s=n-1;s>=0;s--)i[r[s]]=s;var o=[];for(s=0;s<n;s++)o.push(i[e[s]]++);var s,u=r[s=t],a=[];for(var f=1;f<n;f++)a.push(r[s=o[s]]);return u+a.reverse().join("")}function t(e,t,n){var r=e[t];for(var i=t;i>0;e[i]=e[--i]);n.push(e[0]=r)}var n=function(){this.init=function(e){this.masks=[];for(var t=0;t<31;t++)this.masks[t]=(1<<t)-1;this.masks[31]=-2147483648,this.f=e,this.bits=0,this.bitfield=0,this.count=0},this.readbits2=function(t){var n=t>>1;return this.readbits(n)*(1<<n)+this.readbits(t-n)},this.readbits=function(t){while(this.bits<t)this.bitfield=(this.bitfield<<8)+this.f.charCodeAt(this.count++),this.bits+=8;var n=this.masks[t],r=this.bitfield>>this.bits-t&n;return this.bits-=t,this.bitfield&=~(n<<this.bits),r}},r=function(e,t){this.code=e,this.bits=t,this.symbol=undefined},i=function(){this.process=function(e){var t=e.length,n=[];for(var i=0;i<t;i++)n.push([i,e[i]]);n.push([t,-1]);var s=[],o=n[0],u=o[0],a=o[1];for(var f=1;f<n.length;f++){var l=n[f][0],c=n[f][1];if(a)for(var h=u;h<l;h++)s.push(new r(h,a));u=l,a=c;if(c==-1)break}s.sort(function(e,t){return e.bits-t.bits||e.code-t.code}),this.table=s;var p=0,d=-1;this.faht=[];var v=null;for(var i=0;i<this.table.length;i++){var m=this.table[i];d+=1,m.bits!=p&&(d<<=m.bits-p,v=this.faht[p=m.bits]={}),v[m.symbol=d]=m}this.min_bits=16,this.max_bits=-1,this.table.forEach(function(e){e.bits<this.min_bits&&(this.min_bits=e.bits),e.bits>this.max_bits&&(this.max_bits=e.bits)},this)}};return{bz2:{decode:function(r){function a(e){var t=[],n=e.readbits(16);for(var r=32768;r>0;r>>=1){if(!(n&r)){for(var i=0;i<16;i++)t.push(!1);continue}var s=e.readbits(16);for(var o=32768;o>0;o>>=1)t.push(Boolean(s&o))}return t}function l(){for(;;){var n=s.readbits2(48),r=s.readbits2(32);if(n!=54156738319193){if(n==25779555029136){s.readbits(s.bits&7);break}throw"Illegal Bzip2 blocktype = 0x"+n.toString(16)}if(s.readbits(1))throw"Bzip2 randomised support not implemented";var o=s.readbits(24),u=a(s),l=s.readbits(3);if(2>l||l>6)throw RangeError("Bzip2: Number of Huffman groups not in range 2..6");var c=[0,1,2,3,4,5,6].slice(0,l),h=[];for(var p=0,d=s.readbits(15);p<d;p++){var v=0;while(s.readbits(1))if(v++>=l)throw RangeError("More than max ("+l+") groups");t(c,v,h)}var m=[],g=u.reduce(function(e,t){return e+t},0)+2;for(var y=0;y<l;y++){var w=s.readbits(5),E=[];for(var p=0;p<g;p++){if(w<0||w>20)throw RangeError("Bzip2 Huffman length code outside range 0..20");while(s.readbits(1))w-=s.readbits(1)*2-1;E.push(w)}m.push(E)}var S=[];for(var x=0;x<m.length;x++){var T=new i;T.process(m[x]),S.push(T)}var N=[];for(var v=u.length-1;v>=0;v--)u[v]&&N.push(String.fromCharCode(v));N.reverse();var C=0,k=0,L,A=0,O=0,M=[],_;for(;;){--k<=0&&(k=50,C<=h.length&&(L=S[h[C++]]));for(var D in L.faht){s.bits<D&&(s.bitfield=(s.bitfield<<8)+s.f.charCodeAt(s.count++),s.bits+=8);if(_=L.faht[D][s.bitfield>>s.bits-D]){s.bitfield&=s.masks[s.bits-=D],_=_.code;break}}if(0<=_&&_<=1){A==0&&(O=1),A+=O<<_,O<<=1;continue}var P=N[0];for(;A>0;A--)M.push(P);if(_==g-1)break;t(N,_-1,M)}var H=e(M,o),B=[],p=0,j=H.length;while(p<j){var v=H.charCodeAt(p);if(p<j-4&&H.charCodeAt(p+1)==v&&H.charCodeAt(p+2)==v&&H.charCodeAt(p+3)==v){var v=H.charAt(p),F=H.charCodeAt(p+4)+4;for(;F>0;F--)B.push(v);p+=5}else B.push(H[p++])}f.push(B.join(""))}}var s=new n;s.init(r),s.readbits(16);var o=s.readbits(8);if(o!=104)throw"Unknown (not type 'h'uffman Bzip2) compression method";var u=s.readbits(8);if(49<=u&&u<=57){u-=48;var f=[];return l(),f.join("")}throw"Unknown (not size '1'-'9') Bzip2 blocksize"}}}}();this.onmessage=function(e){var t=e.data;t=ArchUtils.bz2.decode(t),postMessage(t)};